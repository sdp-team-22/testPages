{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/jianhuazhu/Documents/SDP - Angular/website/src/app/view/view.component.ts"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport ViewService from \n@Component({\n    selector: 'view-root',\n    templateUrl: 'view.component.html',\n    styleUrls: ['./view.component.scss']\n})\nexport class ViewComponent {\n    @ViewChild('normalSearch') normalSearch!: ElementRef;\n    @ViewChild('advancedSearch') advancedSearch!: ElementRef;\n\n    advancedSearchFilterID = 0;\n\n    equalityTerms = [\n        \"=\",\n        \"<\",\n        \"<=\",\n        \">\",\n        \">=\",\n    ]\n\n    solidformTerms = [\n        \"Form I\",\n        \"Form II\",\n        \"Form III\",\n    ]\n\n    solventSelectTerms = [\n        \"has specific solvent combination\",\n        \"has any data on solvent\",\n    ]\n\n    ngAfterViewInit() {\n      // Now you can access the elements\n      if (this.normalSearch && this.advancedSearch) {\n        // Do something with normalSearch and advancedSearch\n        // console.log(this.normalSearch.nativeElement);\n        // console.log(this.advancedSearch.nativeElement);\n        this.advancedSearch.nativeElement.style.display = 'none';\n        this.createNormal(this.normalSearch.nativeElement, this.advancedSearch.nativeElement);\n        this.createAdvanced(this.normalSearch.nativeElement, this.advancedSearch.nativeElement);\n      }\n    }\n\n    createNormal(normal: any, advanced: any) {\n        const normalSearch = document.createElement('form');\n        // create normal search toggle\n        const toggle = document.createElement('input');\n        toggle.type = \"button\";\n        toggle.value = \"Normal Search\";\n        toggle.addEventListener('click', () => {\n            normal.style.display = 'none';\n            advanced.style.display = 'block';\n        });\n        normalSearch.appendChild(toggle);\n        // form line break\n        normalSearch.appendChild(document.createElement('br'));\n        // number input\n        const numberInput = document.createElement('input');\n        numberInput.pattern = \"[0-9]+\";\n        numberInput.inputMode = \"numeric\";\n        numberInput.placeholder = \"Project Number\";\n        numberInput.classList.add(\"light-background\");\n        normalSearch.appendChild(numberInput);\n        // submit button\n        const searchButton = document.createElement('input');\n        searchButton.type = \"button\";\n        searchButton.value = \"Search\";\n        normalSearch.appendChild(searchButton);\n        // append form to document\n        normal.appendChild(normalSearch);\n\n\n        searchButton.addEventListener('click', () => {\n            const dataToSend = { projectNumber: numberInput.value };\n            this.ViewService.sendData(dataToSend).subscribe(response => {\n              console.log(response);\n            });\n          });\n        \n    }\n\n    createAdvanced(normal: any, advanced: any) {\n        const advancedSearch = document.createElement('form');\n        // create advanced search toggle\n        const toggle = document.createElement('input');\n        toggle.type = \"button\";\n        toggle.value = \"Advanced Search\";\n        toggle.addEventListener('click', function(){\n            normal.style.display = 'block';\n            advanced.style.display = 'none';\n        });\n        advancedSearch.appendChild(toggle);\n        // form line break\n        advancedSearch.appendChild(document.createElement('br'));\n        // create add filter butotn\n        const addFilter = document.createElement('input');\n        addFilter.type = \"button\";\n        addFilter.value = \"Add Filter\";\n        addFilter.addEventListener('click', () => {\n            this.appendSelect(advancedSearch);\n        });\n        advancedSearch.appendChild(addFilter);\n        // create reset filters butotn\n        const resetFilter = document.createElement('input');\n        resetFilter.type = \"button\";\n        resetFilter.value = \"Reset\";\n        resetFilter.addEventListener('click', () => {\n            advanced.innerHTML = '';\n            this.createAdvanced(normal, advanced);\n        });\n     advancedSearch.appendChild(resetFilter);\n        // form line break\n        advancedSearch.appendChild(document.createElement('br'));\n        // append initial select\n        this.appendSelect(advancedSearch);\n        advanced.appendChild(advancedSearch);\n    }\n\n    appendSelect(search: HTMLFormElement){\n        // create selector\n        const selectOptions = [\n            \"Project Number\",\n            \"Molecular Weight\",\n            \"Solid Form\",\n            \"Melting Temperature\",\n            \"Fusion Enthalpy\",\n            \"Solvent\",\n        ]\n        const selectParent = document.createElement('div');\n        const select = document.createElement('select');\n        for (let i = 0; i < selectOptions.length; i++) {\n            const tempOption = document.createElement('option');\n            tempOption.innerText = selectOptions[i];\n            select.appendChild(tempOption);\n        }\n        selectParent.appendChild(select);\n        search.appendChild(selectParent)\n        // set id for select\n        selectParent.id = this.advancedSearchFilterID.toString();\n        this.advancedSearchFilterID++;\n        // make selects based on select value\n        this.updateSelectOptions(select);\n        select.addEventListener('change', () => {\n            this.updateSelectOptions(select);\n        });\n    }\n\n    updateSelectOptions(select: HTMLSelectElement) {\n        var selectedValue = select.value;\n        var parentDiv = select.parentNode;\n\n        if (parentDiv) {\n            // reset select div\n            if (parentDiv.children.length > 1) {\n                for (let i = parentDiv.children.length; i > 0; i--) {\n                    if (parentDiv.children[i]) {\n                        parentDiv.removeChild(parentDiv.children[i]);\n                    }\n                }\n            }\n            // add more inputs depending on what selected value is\n            switch (selectedValue) {\n                case \"Project Number\":\n                    // numerical input\n                    var numberInput = document.createElement('input');\n                    numberInput.pattern = \"[0-9]+\";\n                    numberInput.placeholder = \"Project Number\";\n                    numberInput.classList.add(\"light-background\");\n                    parentDiv.appendChild(numberInput);\n                    break;\n                case \"Molecular Weight\":\n                    // equality select\n                    var equalitySelect = document.createElement('select');\n                    for (let i = 0; i < this.equalityTerms.length; i++){\n                        const tempOption = document.createElement('option');\n                        tempOption.innerText = this.equalityTerms[i];\n                        equalitySelect.appendChild(tempOption);\n                    }\n                    parentDiv.appendChild(equalitySelect);\n                    // numerical input\n                    var numberInput = document.createElement('input');\n                    numberInput.placeholder = \"Molecular Weight (g/mol)\";\n                    numberInput.classList.add(\"light-background\");\n                    parentDiv.appendChild(numberInput);\n                    break;\n                case \"Solid Form\":\n                    var solidformSelect = document.createElement('select');\n                    for (let i = 0; i < this.solidformTerms.length; i++){\n                        const tempOption = document.createElement('option');\n                        tempOption.innerText = this.solidformTerms[i];\n                        solidformSelect.appendChild(tempOption);\n                    }\n                    parentDiv.appendChild(solidformSelect);\n                    break;\n                case \"Melting Temperature\":\n                    // equality select\n                    var equalitySelect = document.createElement('select');\n                    for (let i = 0; i < this.equalityTerms.length; i++){\n                        const tempOption = document.createElement('option');\n                        tempOption.innerText = this.equalityTerms[i];\n                        equalitySelect.appendChild(tempOption);\n                    }\n                    parentDiv.appendChild(equalitySelect);\n                    // numerical input\n                    var numberInput = document.createElement('input');\n                    numberInput.placeholder = \"Melting Temperature (\\u00B0C)\";\n                    numberInput.classList.add(\"light-background\");\n                    parentDiv.appendChild(numberInput);\n                    break;\n                case \"Fusion Enthalpy\":\n                    // equality select\n                    var equalitySelect = document.createElement('select');\n                    for (let i = 0; i < this.equalityTerms.length; i++){\n                        const tempOption = document.createElement('option');\n                        tempOption.innerText = this.equalityTerms[i];\n                        equalitySelect.appendChild(tempOption);\n                    }\n                    parentDiv.appendChild(equalitySelect);\n                    // numerical input\n                    var numberInput = document.createElement('input');\n                    numberInput.placeholder = \"Fusion Enthalpy (J/g)\";\n                    numberInput.classList.add(\"light-background\");\n                    parentDiv.appendChild(numberInput);\n                    break;\n                case \"Solvent\":\n                    // solvent select\n                    var solventSelect = document.createElement('select');\n                    for (let i = 0; i < this.solventSelectTerms.length; i++){\n                        const tempOption = document.createElement('option');\n                        tempOption.innerText = this.solventSelectTerms[i];\n                        solventSelect.appendChild(tempOption);\n                    }\n                    parentDiv.appendChild(solventSelect);\n                    // solvent entries\n                    this.solventSelectAction(solventSelect);\n                    solventSelect.addEventListener(\"change\", () => {\n                        this.solventSelectAction(solventSelect);\n                    })\n                    break;\n            }\n        }\n    }\n\n    solventSelectAction(select: HTMLSelectElement) {\n        var selectedValue = select.value;\n        var parentDiv = select.parentNode;\n\n        if (parentDiv) {\n            // eliminate children\n            if (parentDiv.children.length > 2) {\n                for (let i = parentDiv.children.length; i > 1; i--) {\n                    if (parentDiv.children[i]) {\n                        parentDiv.removeChild(parentDiv.children[i]);\n                    }\n                }\n            }\n            // add children\n            switch (selectedValue) {\n                case \"has specific solvent combination\":\n                    // text input for solvent 1\n                    var numberInput = document.createElement('input');\n                    numberInput.type = \"text\";\n                    numberInput.placeholder = \"Solvent Name\";\n                    numberInput.classList.add(\"light-background\");\n                    parentDiv.appendChild(numberInput);\n                    // text input for solvent 2\n                    var numberInput = document.createElement('input');\n                    numberInput.type = \"text\";\n                    numberInput.placeholder = \"Solvent Name (optional)\";\n                    numberInput.classList.add(\"light-background\");\n                    parentDiv.appendChild(numberInput);\n                    // text input for solvent 3\n                    var numberInput = document.createElement('input');\n                    numberInput.type = \"text\";\n                    numberInput.placeholder = \"Solvent Name (optional)\";\n                    numberInput.classList.add(\"light-background\");\n                    parentDiv.appendChild(numberInput);\n                    break;\n                case \"has any data on solvent\":\n                    // text input for single solvent\n                    var numberInput = document.createElement('input');\n                    numberInput.type = \"text\";\n                    numberInput.placeholder = \"Solvent Name\";\n                    numberInput.classList.add(\"light-background\");\n                    parentDiv.appendChild(numberInput);\n                    break;\n            }\n        }\n\n    }\n}"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}